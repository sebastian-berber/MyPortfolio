---
title: "Client Report - Finding relationships in baseball"
subtitle: "Course DS 250"
author: "Sebastian Berber"
format:
  html:
    self-contained: true
    page-layout: full
    title-block-banner: true
    toc: true
    toc-depth: 3
    toc-location: body
    number-sections: false
    html-math-method: katex
    code-fold: true
    code-summary: "Show the code"
    code-overflow: wrap
    code-copy: hover
    code-tools:
        source: false
        toggle: true
        caption: See code
execute: 
  warning: false
    
---

```{python}
#| label: libraries
#| include: false
import pandas as pd
import numpy as np
import plotly.express as px
import sqlite3
```


## Elevator pitch

_paste your elevator pitch here_
_A SHORT (4-5 SENTENCES) PARAGRAPH THAT `DESCRIBES KEY INSIGHTS` TAKEN FROM METRICS IN THE PROJECT RESULTS THINK TOP OR MOST IMPORTANT RESULTS._

```{python}
#| label: project data
#| code-summary: Read and format project data
# Include and execute your code here

sqlite_file = 'lahmansbaseballdb.sqlite'
con = sqlite3.connect(sqlite_file)
```

```{python}
q6 = '''
    SELECT playerID
    ,      AB
    ,      H
    ,      yearID
    ,      H/(AB * 1.0) AS 'Batting_Average'
    FROM batting
    WHERE playerID = 'addybo01'
'''

df = pd.read_sql_query(q6, con)

df

```

## QUESTION|TASK 1

__Write an SQL query to create a new dataframe about baseball players who attended BYU-Idaho. The new table should contain five columns: playerID, schoolID, salary, and the yearID/teamID associated with each salary. Order the table by salary (highest to lowest) and print out the table in your report.__

```{python}
#| label: Q1
#| code-summary: Read and format data
# Include and execute your code here

q = '''
    SELECT DISTINCT allstarfull.playerID, collegeplaying.schoolID, salaries.salary, salaries.yearID, salaries.teamID
    FROM allstarfull 
    INNER JOIN collegeplaying
    ON allstarfull.playerID = collegeplaying.playerID
    INNER JOIN salaries
    ON salaries.playerID = allstarfull.playerID
    WHERE collegeplaying.schoolID LIKE ('byu%')
    ORDER BY salary
'''
# comment
results1 = pd.read_sql_query(q, con)

results1

```


## QUESTION|TASK 2

__This three-part question requires you to calculate batting average (number of hits divided by the number of at-bats)__

_a. Write an SQL query that provides playerID, yearID, and batting average for players with at least 1 at bat that year. Sort the table from highest batting average to lowest, and then by playerid alphabetically. Show the top 5 results in your report._

```{python}
#| label: Q2a
#| code-summary: Read and format data
# Include and execute your code here


```


_b. Use the same query as above, but only include players with at least 10 at bats that year. Print the top 5 results._

```{python}
#| label: Q2b
#| code-summary: Read and format data
# Include and execute your code here


```

_c. Now calculate the batting average for players over their entire careers (all years combined). Only include players with at least 100 at bats, and print the top 5 results._

```{python}
#| label: Q2c
#| code-summary: Read and format data
# Include and execute your code here


```


## QUESTION|TASK 3

__Pick any two baseball teams and compare them using a metric of your choice (average salary, home runs, number of wins, etc). Write an SQL query to get the data you need, then make a graph using Plotly Express to visualize the comparison. What do you learn?__


```{python}
#| label: Q3
#| code-summary: Read and format data
# Include and execute your code here


```


